import sys
from argparse import ArgumentParser
import csv
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt


class BudgetManager:
    """Class that will manage different expenses across different categories
    Args:
    categories (dict): a dictionary storing the category and expense
    """
    def __init__(self):
        self.categories = {}
    
    def add_expense(self, category, amount):
        if category in self.categories:
            self.categories[category] += amount
        else:
            self.categories[category] = amount

    def total_expense(self):
        """A method that will print out the total expense for each category
        """
        for category, total_amount in self.categories.items():
            print(f"{category}: ${total_amount}")

    def get_expense_by_category(self, category):
        """
        Gets the total expenses for a specific category. Then it Returns zero if the category does not exist.

        Parameters:
            category (str): Name of the category where expenses will be collected.

        Returns:
            float: Total expenses for the category, or zero if the category does not exist.
        """
        if category in self.categories:
            return self.categories[category]
        else:
            return 0
    def remove_category(self, category):
        """
        Removes category from the budget and its expenses.

        Parameters:
            category (str): name of removed category
        """
        if category in self.categories:
            del self.categories[category]

def main(self, filepath):
    """Data Aggregation function that will read the path to a file and do aggregation methods

    Args:
        filepath (str): path to a csv file
    """
    with open(filepath, newline=" ") as csvfile:
        csvpath = csv.reader(csvfile)
        #for row in csvpath:


    
    
def parse_args(argslist):
    """Parse command line arguments

    Args:
        argslist (list): list of command line args

    Returns:
        namespace object
    """

    parser = ArgumentParser()
    parser.add_argument("filepath",help="path to a CSV file")
    return parser.parse_args(argslist)

if __name__ == "__main__":
    args = parse_args(sys.argv[1:])
    main(args.filepath)